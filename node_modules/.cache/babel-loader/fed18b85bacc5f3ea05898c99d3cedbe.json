{"ast":null,"code":"import _regeneratorRuntime from \"/Users/avaamo/Documents/GitHub/queryparaphraserui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/avaamo/Documents/GitHub/queryparaphraserui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/avaamo/Documents/GitHub/queryparaphraserui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/avaamo/Documents/GitHub/queryparaphraserui/src/App.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport React, { Fragment, useState } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar App = function App() {\n  _s();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputQuery = _useState2[0],\n      setInputQuery = _useState2[1];\n\n  var _useState3 = useState(5),\n      _useState4 = _slicedToArray(_useState3, 2),\n      numParaQues = _useState4[0],\n      setNumParaQues = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      paraphrasedQueries = _useState6[0],\n      setParaphrasedQueries = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isLoading = _useState8[0],\n      setIsLoading = _useState8[1];\n\n  var getQueries = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var body, response, rawQueryArray;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              body = {\n                input_text: inputQuery,\n                max_questions: numParaQues\n              }; // fetch(\"https://0.0.0.0:3000/paraphrase-qg\", {\n              //   method: \"POST\",\n              //   headers: { \"Content-type\": \"application/json\" },\n              //   body: JSON.stringify(body),\n              // })\n              //   .then((response) => response.json())\n              //   .then((data) => {\n              //     setIsLoading(false);\n              //     console.log(\"LOG 1: \", data);\n              //     setParaphrasedQueries(data);\n              //   });\n\n              _context.next = 4;\n              return fetch(\"http://0.0.0.0:3000/paraphrase-qg\", {\n                method: \"POST\",\n                headers: {\n                  \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify(body)\n              });\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json().then(function (data) {\n                setIsLoading(false);\n                console.log(\"LOG 1: \", data);\n              });\n\n            case 7:\n              rawQueryArray = _context.sent;\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"LOG 2: \", _context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n\n    return function getQueries() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var onSubmitForm = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              event.preventDefault();\n              setIsLoading(true);\n              console.log(inputQuery);\n              console.log(numParaQues);\n\n              if (!inputQuery) {\n                window.alert(\"Please Enter valid Query!\");\n              } else if (numParaQues < 1) {\n                window.alert(\"Please Enter Number of Paraphrased Queries to Generate!\");\n              } else {\n                getQueries();\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onSubmitForm(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App card m-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" QUERY PARAPHRASE GENERATOR \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: onSubmitForm,\n          children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"m-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \" ENTER SEED QUERY BELOW \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: inputQuery,\n                onChange: function onChange(event) {\n                  return setInputQuery(event.target.value);\n                },\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"m-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"ENTER NUMBER OF PARAPHRASES QUERIES TO GENERATE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: numParaQues,\n                onChange: function onChange(event) {\n                  return setNumParaQues(event.target.value);\n                },\n                className: \"form-control\",\n                min: \"1\",\n                max: \"50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, _this), !isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"GENERATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"my-5\",\n            children: [isLoading && /*#__PURE__*/_jsxDEV(Loader, {\n              type: \"Rings\",\n              color: \"#0000FF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, _this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" Generating Paraphrased Queries... Please wait! \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group list-group-flush\",\n          children: paraphrasedQueries.map(function (query) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: [\" \", query.split(\" \").slice(1).join(\" \"), \" \"]\n            }, query, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(App, \"5RfAaSagshxjeVvdPebnbQttTNQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/avaamo/Documents/GitHub/queryparaphraserui/src/App.js"],"names":["React","Fragment","useState","Loader","App","inputQuery","setInputQuery","numParaQues","setNumParaQues","paraphrasedQueries","setParaphrasedQueries","isLoading","setIsLoading","getQueries","body","input_text","max_questions","fetch","method","headers","JSON","stringify","response","json","then","data","console","log","rawQueryArray","onSubmitForm","event","preventDefault","window","alert","target","value","map","query","split","slice","join"],"mappings":";;;;;;;;AAAA,OAAO,cAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,+DAAP;;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA;;AAAA,kBACoBF,QAAQ,CAAC,EAAD,CAD5B;AAAA;AAAA,MACTG,UADS;AAAA,MACGC,aADH;;AAAA,mBAEsBJ,QAAQ,CAAC,CAAD,CAF9B;AAAA;AAAA,MAETK,WAFS;AAAA,MAEIC,cAFJ;;AAAA,mBAGoCN,QAAQ,CAAC,EAAD,CAH5C;AAAA;AAAA,MAGTO,kBAHS;AAAA,MAGWC,qBAHX;;AAAA,mBAIkBR,QAAQ,CAAC,KAAD,CAJ1B;AAAA;AAAA,MAITS,SAJS;AAAA,MAIEC,YAJF;;AAMhB,MAAMC,UAAU;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAETC,cAAAA,IAFS,GAEF;AACXC,gBAAAA,UAAU,EAAEV,UADD;AAEXW,gBAAAA,aAAa,EAAET;AAFJ,eAFE,EAOf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAjBe;AAAA,qBAmBQU,KAAK,CAAC,mCAAD,EAAsC;AAChEC,gBAAAA,MAAM,EAAE,MADwD;AAEhEC,gBAAAA,OAAO,EAAE;AAAE,kCAAgB;AAAlB,iBAFuD;AAGhEL,gBAAAA,IAAI,EAAEM,IAAI,CAACC,SAAL,CAAeP,IAAf;AAH0D,eAAtC,CAnBb;;AAAA;AAmBTQ,cAAAA,QAnBS;AAAA;AAAA,qBAyBaA,QAAQ,CAACC,IAAT,GAAgBC,IAAhB,CAAsB,UAAAC,IAAI,EAAI;AACxDb,gBAAAA,YAAY,CAAC,KAAD,CAAZ;AACAc,gBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,IAAvB;AAED,eAJ2B,CAzBb;;AAAA;AAyBTG,cAAAA,aAzBS;AAAA;AAAA;;AAAA;AAAA;AAAA;AAyCfF,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AAzCe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVd,UAAU;AAAA;AAAA;AAAA,KAAhB;;AA6CA,MAAMgB,YAAY;AAAA,yEAAG,kBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AACnBA,cAAAA,KAAK,CAACC,cAAN;AACAnB,cAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAc,cAAAA,OAAO,CAACC,GAAR,CAAYtB,UAAZ;AACAqB,cAAAA,OAAO,CAACC,GAAR,CAAYpB,WAAZ;;AAEA,kBAAI,CAACF,UAAL,EAAiB;AACf2B,gBAAAA,MAAM,CAACC,KAAP,CAAa,2BAAb;AACD,eAFD,MAEO,IAAI1B,WAAW,GAAG,CAAlB,EAAqB;AAC1ByB,gBAAAA,MAAM,CAACC,KAAP,CAAa,yDAAb;AACD,eAFM,MAEA;AACLpB,gBAAAA,UAAU;AACX;;AAbkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZgB,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAgBA,sBACE,QAAC,QAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eADF,eAIE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAM,UAAA,QAAQ,EAAEA,YAAhB;AAAA,kCACE;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,KAAK,EAAExB,UAFT;AAGE,gBAAA,QAAQ,EAAE,kBAACyB,KAAD;AAAA,yBAAWxB,aAAa,CAACwB,KAAK,CAACI,MAAN,CAAaC,KAAd,CAAxB;AAAA,iBAHZ;AAIE,gBAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,uBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAWE;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,KAAK,EAAE5B,WAFT;AAGE,gBAAA,QAAQ,EAAE,kBAACuB,KAAD;AAAA,yBAAWtB,cAAc,CAACsB,KAAK,CAACI,MAAN,CAAaC,KAAd,CAAzB;AAAA,iBAHZ;AAIE,gBAAA,SAAS,EAAC,cAJZ;AAKE,gBAAA,GAAG,EAAC,GALN;AAME,gBAAA,GAAG,EAAC;AANN;AAAA;AAAA;AAAA;AAAA,uBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,qBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAyBG,CAACxB,SAAD,iBACC;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA1BJ,eA+BE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,uBACGA,SAAS,iBAAI,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,OAAb;AAAqB,cAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,qBADhB,EAEGA,SAAS,iBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,mBA/BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eAJF,eA6CE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,6BAAd;AAAA,oBAEGF,kBAAkB,CAAC2B,GAAnB,CAAuB,UAACC,KAAD;AAAA,gCACtB;AAAI,cAAA,SAAS,EAAC,iBAAd;AAAA,yBACG,GADH,EAEGA,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,KAAjB,CAAuB,CAAvB,EAA0BC,IAA1B,CAA+B,GAA/B,CAFH,EAEwC,GAFxC;AAAA,eAAqCH,KAArC;AAAA;AAAA;AAAA;AAAA,qBADsB;AAAA,WAAvB;AAFH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eA7CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AA6DD,CAhID;;GAAMjC,G;;KAAAA,G;AAkIN,eAAeA,GAAf","sourcesContent":["import \"./styles.css\";\nimport React, { Fragment, useState } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nconst App = () => {\n  const [inputQuery, setInputQuery] = useState(\"\");\n  const [numParaQues, setNumParaQues] = useState(5);\n  const [paraphrasedQueries, setParaphrasedQueries] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getQueries = async () => {\n    try {\n      const body = {\n        input_text: inputQuery,\n        max_questions: numParaQues,\n      };\n\n      // fetch(\"https://0.0.0.0:3000/paraphrase-qg\", {\n      //   method: \"POST\",\n      //   headers: { \"Content-type\": \"application/json\" },\n      //   body: JSON.stringify(body),\n      // })\n      //   .then((response) => response.json())\n      //   .then((data) => {\n      //     setIsLoading(false);\n      //     console.log(\"LOG 1: \", data);\n      //     setParaphrasedQueries(data);\n      //   });\n\n      const response = await fetch(\"http://0.0.0.0:3000/paraphrase-qg\", {\n        method: \"POST\",\n        headers: { \"Content-type\": \"application/json\" },\n        body: JSON.stringify(body)\n      });\n\n      const rawQueryArray = await response.json().then( data => {\n        setIsLoading(false)\n        console.log(\"LOG 1: \", data);\n        \n      });\n\n      // rawQueryArray.map(rawQ => console.log(rawQ.split(' ').slice(1).join(' ')));\n\n      // fetch(\"https://0.0.0.0:3000/paraphrase-qg\", {\n      //   method: \"POST\",\n      //   headers: { \"Content-type\": \"application/json\" },\n      //   body: body\n      // })\n      //   .then((response) => response.json())\n      //   .then((data) => setParaphrasedQueries(data));\n    } catch (error) {\n      console.log(\"LOG 2: \", error);\n    }\n  };\n\n  const onSubmitForm = async (event) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    console.log(inputQuery);\n    console.log(numParaQues);\n\n    if (!inputQuery) {\n      window.alert(\"Please Enter valid Query!\");\n    } else if (numParaQues < 1) {\n      window.alert(\"Please Enter Number of Paraphrased Queries to Generate!\");\n    } else {\n      getQueries();\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"App card m-5\">\n        <div className=\"card-header\">\n          <h1> QUERY PARAPHRASE GENERATOR </h1>\n        </div>\n        <div className=\"card-body\">\n          <form onSubmit={onSubmitForm}>\n            <fieldset>\n              <div className=\"m-3\">\n                <label> ENTER SEED QUERY BELOW </label>\n                <input\n                  type=\"text\"\n                  value={inputQuery}\n                  onChange={(event) => setInputQuery(event.target.value)}\n                  className=\"form-control\"\n                />\n              </div>\n\n              <div className=\"m-3\">\n                <label>ENTER NUMBER OF PARAPHRASES QUERIES TO GENERATE</label>\n                <input\n                  type=\"number\"\n                  value={numParaQues}\n                  onChange={(event) => setNumParaQues(event.target.value)}\n                  className=\"form-control\"\n                  min=\"1\"\n                  max=\"50\"\n                />\n              </div>\n            </fieldset>\n\n            {!isLoading && (\n              <button type=\"submit\" className=\"btn btn-primary\">\n                GENERATE\n              </button>\n            )}\n\n            <div className=\"my-5\">\n              {isLoading && <Loader type=\"Rings\" color=\"#0000FF\" />}\n              {isLoading && (\n                <p> Generating Paraphrased Queries... Please wait! </p>\n              )}\n            </div>\n          </form>\n        </div>\n\n        <div className=\"card-footer\">\n          <ul className=\"list-group list-group-flush\">\n            {/* <li className=\"list-group-item\">An item</li> */}\n            {paraphrasedQueries.map((query) => (\n              <li className=\"list-group-item\" key={query}>\n                {\" \"}\n                {query.split(\" \").slice(1).join(\" \")}{\" \"}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}